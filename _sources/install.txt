.. index :: 
	single: compilers; gcc, gfortran
	single: Xcode
	single: configure
	single: compiler flags; FCFLAGS, -O3, -Ofast
	single: parallelization; --enable-openmp, OpenMP


################
Installing GGADT
################





GGADT should :index:`install` easily on most Unix-based systems (e.g. Linux, Mac) by following the standard GNU install procedures, described in ``INSTALL``::

        $ ./configure --datadir=/path/to/datadir [--enable-openmp] ...
        $ make
        $ make install

This installs ggadt into a globally-accessible folder (usually :file:`/usr/local/bin`). 

.. warning :: 
        
        Users *must* give :file:`configure` a :option:`--distdir`. This is where the defaults file and a couple of other necessary files will be stored (they'll actually be stored in the ``${distdir}/ggadt`` subdirectory). Pick a location where you have adequate permissions (e.g. your home directory).

If you did do :command:`make install`, you can undo it by running :command:`make uninstall`. To clean and remake GGADT, simply do :command:`make clean` and then :command:`make install`.

FFT Options
===========

Right now, GGADT works with the GPFA FFT only (this is supplied with GGADT; you don't need to do anything extra to implement it). We originally planned to offer FFTW support, and this will come in future releases, but our benchmark tests didn't show any significant speed improvement when using FFTW over GPFA. 

If you have another FFT library that you would like to use, let us know.

Optimization
============

It should give you a slight (5 - 10%) speed advantage to use the ``-O3`` optimization flag. We tried using ``-Ofast``, but this produced a segfault for moderately large 2d grid sizes, and we didnâ€™t spend too much time trying to figure out why. So, you can use ``-Ofast`` for a little extra oomph, but just know that things might break unexpectedly (the normal, 1d case worked fine for us)::
        
        $ ./configure FCFLAGS="-O3" --datadir=/path/to/datadir [--enable-openmp] ...


What you need
=============

**Suitable C and Fortran 90 compilers**  
	GGADT was developed using the GNU compiler suite (version 4.5.4 and higher) throughout, but the configure script will try to work with most common compilers. GGADT has been tested to compile on versions 4.3 and later of :program:`gfortran`. If you experience any compilation problems, please let us know!
**OpenMP** 
	For the :index:`OpenMP` version of GGADT, you must have C and Fortran compilers that are compatible with OpenMP version 4.0 or later.



Mac Users
=========

* Install the latest edition of :program:`XCode command-line tools`. As of Mac OSX v10.9.1, the command-line tools are not included in :program:`XCode` automatically, so you have to do this on your own.
* **Macports** is highly recommended. To install,

        #. Download and install :index:`macports` from http://www.macports.org/
        #. Install the :program:`coreutils` package: :command:`sudo port install coreutils`
        #. Install :program:`gcc` (4.5.4 or higher is recommended): :command:`sudo port install gcc45`
        #. Set the :program:`gcc` compiler: :command:`sudo port select --set gcc mp-gcc45`


