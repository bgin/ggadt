Agglomerations of spherical monomers
====================================

GGADT also natively supports grains composed of spherical monomers. Two examples:

.. figure:: BA_256_1_noheader.png
	:width: 400px

	"BA" aggregate (porous); 256 monomers; ``BA.256.1.targ``


.. figure:: BAM2_256_1_noheader.png
	:width: 400px

	"BAM2" aggregate (least porous); 256 monomers; ``BAM2.256.1.targ``

In order to use this geometry, you must set ``grain-geometry=spheres`` or ``grain-geometry=agglomeration``, and tell GGADT where the agglomeration target file is by setting ``agglom-file=/path/to/targetfile.targ``. 

Format of the target file
-------------------------

GGADT expects a very particular format for the ``.targ`` file (Fortran is not very forgiving).

Here's a relevant snippet from the ``read_spheres()`` function in the ``spheres.f90`` module

.. code-block :: fortran

	read(1,'(52X,i2,7X,i4)') MIGRATE,ISEED
    read(1,'(i9,f12.2,3f11.6)') NS, VTOT, ALPHA(1), ALPHA(2), ALPHA(3)
    read(1,'(3f10.6,13X)') A_mat(1,1), A_mat(2,1), A_mat(3,1)
    read(1,'(3f10.6,13X)') A_mat(1,2), A_mat(2,2), A_mat(3,2)
    read(1,'(A)') junk

And here's the beginning of the ``BA.256.1.targ`` file::

	multisphere target generated by agglom with MIGRATE= 0 ISEED=  -1
	      256      256.00   4.542054   3.871312   3.192810 = NS, VTOT, alpha(1-3)
	  0.777146 -0.629320  0.000000 = A_1 vector
	  0.629320  0.777146  0.000000 = A_2 vector
	       j      x(j)        y(j)        z(j)     2*a(j)
	       1    0.000000    0.000000    0.000000  1.000000
	       2   -0.132818   -0.362148    0.922610  1.000000
	       3   -0.231104   -0.859202   -0.456468  1.000000
	       4   -0.064126   -0.651197    1.877456  1.000000
	       5    0.289849   -1.257871    1.060564  1.000000
	    	...

Multiple compositions
---------------------

GGADT allows you to set each monomer to have a different composition; for instance, some monomers might be iron particles, some might be carbon, and some might be silicate.

