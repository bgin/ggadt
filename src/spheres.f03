MODULE SPHERES

	USE, INTRINSIC :: ISO_C_BINDING
	USE PARAMS
	USE SPHERE
	SAVE
	INTEGER :: NSPHERES, NROTS, OK
	REAL, DIMENSION(3) :: EUL_ANGLES = (/ 0.0, 0.0, 0.0 /)
	!COMPLEX(C_DOUBLE_COMPLEX) :: DELM = CMPLX(IOR_RE, IOR_IM) 
	CHARACTER(len=20) :: SPHLIST_FNAME = "list_of_spheres.dat"

	
	CONTAINS

	SUBROUTINE READ_SPHERES(PHI)
		IMPLICIT NONE
		COMPLEX(C_DOUBLE_COMPLEX), DIMENSION(NGRID,NGRID), INTENT(OUT) :: PHI
		REAL, DIMENSION(NSPHERES) :: RADII, IOR_R, IOR_I
		REAL, DIMENSION(NSPHERES,3) :: POS, POS_ROT
		INTEGER  :: I 
		
		DO I=1,NSPHERES
			read(1, *) POS(I,1), POS(I,2), POS(I,3), RADII(I), IOR_R(I), IOR_I(I)
			!print *,POS(I,1), POS(I,2), POS(I,3), RADII(I), IOR_R(I), IOR_I(I)
		END DO 
		call exit()

	END SUBROUTINE READ_SPHERES

	FUNCTION PHI_SPHERES(X,Y,Z,K)
		IMPLICIT NONE
		REAL, INTENT(IN) :: X,Y,Z,K
		REAL :: R, L, GR_A
		COMPLEX(C_DOUBLE_COMPLEX) :: PHI_SPHERES
		
	END FUNCTION PHI_SPHERES

	FUNCTION SHADOW_SPHERES(X,Y,K)
		IMPLICIT NONE
		REAL, DIMENSION(NGRID), INTENT(IN) :: X,Y
		REAL, INTENT(IN) :: K
		COMPLEX(C_DOUBLE_COMPLEX), DIMENSION(NGRID,NGRID) :: SHADOW_SPHERES, PHI
		open(unit=1,file=SPHLIST_FNAME)
		read (1,*) NSPHERES
		print *,"NSPHERES = ", NSPHERES 

		

		CALL READ_SPHERES(PHI)
		!SHADOW_SPHERES = 1-EXP( (0.0,1.0)*PHI_SPHERES(X,Y,Z,K) )
		
	END FUNCTION SHADOW_SPHERES

END MODULE SPHERES 